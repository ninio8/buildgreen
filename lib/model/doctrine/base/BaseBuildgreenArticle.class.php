<?php

/**
 * BaseBuildgreenArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $body
 * @property boolean $is_visible
 * @property BuildgreenCategory $BuildgreenCategory
 * 
 * @method integer            getCategoryId()         Returns the current record's "category_id" value
 * @method string             getBody()               Returns the current record's "body" value
 * @method boolean            getIsVisible()          Returns the current record's "is_visible" value
 * @method BuildgreenCategory getBuildgreenCategory() Returns the current record's "BuildgreenCategory" value
 * @method BuildgreenArticle  setCategoryId()         Sets the current record's "category_id" value
 * @method BuildgreenArticle  setBody()               Sets the current record's "body" value
 * @method BuildgreenArticle  setIsVisible()          Sets the current record's "is_visible" value
 * @method BuildgreenArticle  setBuildgreenCategory() Sets the current record's "BuildgreenCategory" value
 * 
 * @package    buildgreen
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBuildgreenArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('buildgreen_article');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('body', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('is_visible', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BuildgreenCategory', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}